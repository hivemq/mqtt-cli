[versions]
apache-commonsCodec = "1.15"
apache-commonsCollections = "3.2.2"
apache-commonsCompress = "1.23.0"
apache-commonsIO = "2.13.0"
apache-commonsLang = "3.12.0"
apache-commonsText = "1.10.0"
assertj = "3.24.2"
awaitility = "4.2.0"
bouncycastle = "1.75"
byteBuddy = "1.14.5"
concurrentunit = "0.4.6"
dropwizard-metrics = "4.2.19"
eclipse-collections = "11.1.0"
eclipse-paho-client = "1.2.5"
equalsVerifier = "3.14.2"
fusesource-mqttClient = "1.16"
google-protobuf = "3.23.2"
guava = "32.0.1-jre"
guice = "5.1.0"
hamcrest = "2.2"
hivemq-configurationService = "0.8.1"
hivemq-logbackTestAppender = "0.3.0"
hivemq-mqttClient = "1.3.2"
hivemq-result = "0.1.0"
jackson = "2.15.2"
javacrumbs-jsonUnit = "2.38.0"
javassist = "3.29.2-GA"
javax-servlet = "4.0.1"
javax-websocket = "1.1"
javax-wsrs = "2.1.1"
jctools = "4.0.1"
#jetty >= 10 has significant API changes, and relies on a newer Servlet API
jetty = "9.4.51.v20230217"
# JGroups >=" 4.1.0 does not compile"
jgroups = "4.0.24.Final"
jsoup = "1.16.1"
junit = "4.13.2"
junit-jupiter = "5.9.3"
junit-platform-launcher = "1.9.3"
kotlin = "1.8.22"
# Kryo >=" 5.0.0 does not compile"
kryo = "4.0.3"
logback = "1.4.7"
logstash = "7.3"
mockito = "4.11.0"
netty = "4.1.94.Final"
netty-boringssl = "2.0.54.Final"
networknt-json-schemaValidator = "1.0.84"
openJdk-jmh = "1.36"
openJdk-jol = "0.17"
# OpenTelemetry (keep main and alpha versions in sync)
openTelemetry = "1.27.0"
openTelemetry-alpha = "1.27.0-alpha"
oshi = "6.4.3"
picocli = "4.6.3"
pragmatists-junitparams = "1.1.1"
reflections = "0.10.2"
resteasy = "4.7.9.Final"
rocksdb = "7.4.5"
shrinkwrap = "1.2.6"
slf4j = "2.0.7"
stefanBirkner-systemLambda = "1.2.1"
stefanBirkner-systemRules = "1.19.0"
swagger-annotations = "1.6.11"
testcontainers = "1.18.3"
# Vaadin version 8 is an LTS version, upgrading it to a version greater 8 requires a lot of code changes and possibly breaks EnterpriseSDK
vaadin = "8.14.3"
vaadin-chartjs = "1.3.0-hmq"
vaadin-sassCompiler = "0.9.13"
wiremock = "2.35.0"
# Xodus update to 1.3.0 and greater leads to serious performance downgrades
xodus = "1.2.3"
zeroAllocationHashing = "0.16"

[libraries]
apache-commonsCodec = { module = "commons-codec:commons-codec", version.ref = "apache-commonsCodec" }
apache-commonsCollections = { module = "commons-collections:commons-collections", version.ref = "apache-commonsCollections" }
apache-commonsCompress = { module = "org.apache.commons:commons-compress", version.ref = "apache-commonsCompress" }
apache-commonsIO = { module = "commons-io:commons-io", version.ref = "apache-commonsIO" }
apache-commonsLang = { module = "org.apache.commons:commons-lang3", version.ref = "apache-commonsLang" }
apache-commonsText = { module = "org.apache.commons:commons-text", version.ref = "apache-commonsText" }
assertj = { module = "org.assertj:assertj-core", version.ref = "assertj" }
awaitility = { module = "org.awaitility:awaitility", version.ref = "awaitility" }
bouncycastle-prov = { module = "org.bouncycastle:bcprov-jdk18on", version.ref = "bouncycastle" }
bouncycastle-pkix = { module = "org.bouncycastle:bcpkix-jdk18on", version.ref = "bouncycastle" }
byteBuddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byteBuddy" }
concurrentunit = { module = "net.jodah:concurrentunit", version.ref = "concurrentunit" }
dropwizard-metrics = { module = "io.dropwizard.metrics:metrics-core", version.ref = "dropwizard-metrics" }
dropwizard-metrics-jetty9 = { module = "io.dropwizard.metrics:metrics-jetty9", version.ref = "dropwizard-metrics" }
dropwizard-metrics-jmx = { module = "io.dropwizard.metrics:metrics-jmx", version.ref = "dropwizard-metrics" }
dropwizard-metrics-jvm = { module = "io.dropwizard.metrics:metrics-jvm", version.ref = "dropwizard-metrics" }
dropwizard-metrics-logback = { module = "io.dropwizard.metrics:metrics-logback", version.ref = "dropwizard-metrics" }
eclipse-collections = { module = "org.eclipse.collections:eclipse-collections", version.ref = "eclipse-collections" }
eclipse-paho-client-mqttv3 = { module = "org.eclipse.paho:org.eclipse.paho.client.mqttv3", version.ref = "eclipse-paho-client" }
equalsVerifier = { module = "nl.jqno.equalsverifier:equalsverifier", version.ref = "equalsVerifier" }
fusesource-mqttClient = { module = "org.fusesource.mqtt-client:mqtt-client", version.ref = "fusesource-mqttClient" }
google-protobuf-java = { module = "com.google.protobuf:protobuf-java", version.ref = "google-protobuf" }
google-protobuf-java-util = { module = "com.google.protobuf:protobuf-java-util", version.ref = "google-protobuf" }
guava = { module = "com.google.guava:guava", version.ref = "guava" }
guice = { module = "com.google.inject:guice", version.ref = "guice" }
guice-servlet = { module = "com.google.inject.extensions:guice-servlet", version.ref = "guice" }
hamcrest = { module = "org.hamcrest:hamcrest", version.ref = "hamcrest" }
hivemq-configurationService = { module = "com.hivemq.commons:hivemq-configuration-service", version.ref = "hivemq-configurationService" }
hivemq-enterprise = { module = "com.hivemq:hivemq-enterprise" }
hivemq-kinesisTracingTestExtension = { module = "com.hivemq.extensions:kinesis-tracing-test-extension" }
hivemq-logbackTestAppender = { module = "com.hivemq.commons:hivemq-logback-test-appender", version.ref = "hivemq-logbackTestAppender" }
hivemq-mqttClient = { module = "com.hivemq:hivemq-mqtt-client", version.ref = "hivemq-mqttClient" }
hivemq-platformSdk = { module = "com.hivemq:hivemq-platform-sdk" }
hivemq-result = { module = "com.hivemq.commons:hivemq-result", version.ref = "hivemq-result" }
jackson = { module = "com.fasterxml.jackson.core:jackson-core", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }
jackson-databind = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-datatype-guava = { module = "com.fasterxml.jackson.datatype:jackson-datatype-guava", version.ref = "jackson" }
jackson-jaxrs-jsonProvider = { module = "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider", version.ref = "jackson" }
javacrumbs-jsonUnit-assertj = { module = "net.javacrumbs.json-unit:json-unit-assertj", version.ref = "javacrumbs-jsonUnit" }
javassist = { module = "org.javassist:javassist", version.ref = "javassist" }
javax-servlet-api = { module = "javax.servlet:javax.servlet-api", version.ref = "javax-servlet" }
javax-websocket-api = { module = "javax.websocket:javax.websocket-api", version.ref = "javax-websocket" }
javax-wsrs-api = { module = "javax.ws.rs:javax.ws.rs-api", version.ref = "javax-wsrs" }
jctools = { module = "org.jctools:jctools-core", version.ref = "jctools" }
jetty-bom = { module = "org.eclipse.jetty:jetty-bom", version.ref = "jetty" }
jetty-client = { module = "org.eclipse.jetty:jetty-client", version.ref = "jetty" }
jetty-continuation = { module = "org.eclipse.jetty:jetty-continuation", version.ref = "jetty" }
jetty-javaxWebsocket-server-impl = { module = "org.eclipse.jetty.websocket:javax-websocket-server-impl", version.ref = "jetty" }
jetty-server = { module = "org.eclipse.jetty:jetty-server", version.ref = "jetty" }
jetty-servlet = { module = "org.eclipse.jetty:jetty-servlet", version.ref = "jetty" }
jgroups = { module = "org.jgroups:jgroups", version.ref = "jgroups" }
jsoup = { module = "org.jsoup:jsoup", version.ref = "jsoup" }
julToSlf4j = { module = "org.slf4j:jul-to-slf4j", version.ref = "slf4j" }
junit = { module = "junit:junit", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-jupiter" }
junit-platform-launcher = { module = "org.junit.platform:junit-platform-launcher", version.ref = "junit-platform-launcher" }
junit-vintageEngine = { module = "org.junit.vintage:junit-vintage-engine", version.ref = "junit-jupiter" }
kotlin-bom = { module = "org.jetbrains.kotlin:kotlin-bom", version.ref = "kotlin" }
kryo = { module = "com.esotericsoftware:kryo", version.ref = "kryo" }
logback-classic = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
logstash-logbackEncoder = { module = "net.logstash.logback:logstash-logback-encoder", version.ref = "logstash" }
mockito = { module = "org.mockito:mockito-core", version.ref = "mockito" }
netty-bom = { module = "io.netty:netty-bom", version.ref = "netty" }
netty-boringssl = { module = "io.netty:netty-tcnative-boringssl-static", version.ref = "netty-boringssl" }
netty-codec-haproxy = { module = "io.netty:netty-codec-haproxy", version.ref = "netty" }
netty-codec-http = { module = "io.netty:netty-codec-http", version.ref = "netty" }
netty-handler = { module = "io.netty:netty-handler", version.ref = "netty" }
netty-transport-native-epoll = { module = "io.netty:netty-transport-native-epoll", version.ref = "netty" }
networknt-json-schemaValidator = { module = "com.networknt:json-schema-validator", version.ref = "networknt-json-schemaValidator" }
openHft-zeroAllocationHashing = { module = "net.openhft:zero-allocation-hashing", version.ref = "zeroAllocationHashing" }
openJdk-jmh = { module = "org.openjdk.jmh:jmh-core", version.ref = "openJdk-jmh" }
openJdk-jmh-generator-annprocess = { module = "org.openjdk.jmh:jmh-generator-annprocess", version.ref = "openJdk-jmh" }
openJdk-jol = { module = "org.openjdk.jol:jol-core", version.ref = "openJdk-jol" }
openTelemetry-api = { module = "io.opentelemetry:opentelemetry-api", version.ref = "openTelemetry" }
openTelemetry-exporter-jaeger = { module = "io.opentelemetry:opentelemetry-exporter-jaeger", version.ref = "openTelemetry" }
openTelemetry-exporter-otlp = { module = "io.opentelemetry:opentelemetry-exporter-otlp", version.ref = "openTelemetry" }
openTelemetry-extension-trace-propagators = { module = "io.opentelemetry:opentelemetry-extension-trace-propagators", version.ref = "openTelemetry" }
openTelemetry-sdk = { module = "io.opentelemetry:opentelemetry-sdk", version.ref = "openTelemetry" }
openTelemetry-sdk-testing = { module = "io.opentelemetry:opentelemetry-sdk-testing", version.ref = "openTelemetry" }
openTelemetry-semconv = { module = "io.opentelemetry:opentelemetry-semconv", version.ref = "openTelemetry-alpha" }
oshi = { module = "com.github.oshi:oshi-core", version.ref = "oshi" }
picocli = { module = "info.picocli:picocli", version.ref = "picocli" }
pragmatists-junitparams = { module = "pl.pragmatists:JUnitParams", version.ref = "pragmatists-junitparams" }
reflections = { module = "org.reflections:reflections", version.ref = "reflections" }
resteasy = { module = "org.jboss.resteasy:resteasy-core", version.ref = "resteasy" }
resteasy-jackson2provider = { module = "org.jboss.resteasy:resteasy-jackson2-provider", version.ref = "resteasy" }
resteasy-jaxbProvider = { module = "org.jboss.resteasy:resteasy-jaxb-provider", version.ref = "resteasy" }
rocksdb = { module = "org.rocksdb:rocksdbjni", version.ref = "rocksdb" }
shrinkwrap-api = { module = "org.jboss.shrinkwrap:shrinkwrap-api", version.ref = "shrinkwrap" }
shrinkwrap-impl = { module = "org.jboss.shrinkwrap:shrinkwrap-impl-base", version.ref = "shrinkwrap" }
slf4j-api = { module = "org.slf4j:slf4j-api", version.ref = "slf4j" }
stefanBirkner-systemLambda = { module = "com.github.stefanbirkner:system-lambda", version.ref = "stefanBirkner-systemLambda" }
stefanBirkner-systemRules = { module = "com.github.stefanbirkner:system-rules", version.ref = "stefanBirkner-systemRules" }
swagger-annotations = { module = "io.swagger:swagger-annotations", version.ref = "swagger-annotations" }
testcontainers = { module = "org.testcontainers:testcontainers", version.ref = "testcontainers" }
testcontainers-hivemq = { module = "org.testcontainers:hivemq", version.ref = "testcontainers" }
testcontainers-junitJupiter = { module = "org.testcontainers:junit-jupiter", version.ref = "testcontainers" }
testcontainers-localstack = { module = "org.testcontainers:localstack", version.ref = "testcontainers" }
testcontainers-toxiproxy = { module = "org.testcontainers:toxiproxy", version.ref = "testcontainers" }
vaadin-chartjs = { module = "com.byteowls:vaadin-chartjs", version.ref = "vaadin-chartjs" }
vaadin-client-compiler = { module = "com.vaadin:vaadin-client-compiler", version.ref = "vaadin" }
vaadin-push = { module = "com.vaadin:vaadin-push", version.ref = "vaadin" }
vaadin-sassCompiler = { module = "com.vaadin:vaadin-sass-compiler", version.ref = "vaadin-sassCompiler" }
vaadin-server = { module = "com.vaadin:vaadin-server", version.ref = "vaadin" }
vaadin-themes = { module = "com.vaadin:vaadin-themes", version.ref = "vaadin" }
wiremock-jre8-standalone = { module = "com.github.tomakehurst:wiremock-jre8-standalone", version.ref = "wiremock" }
xodus-entityStore = { module = "org.jetbrains.xodus:xodus-entity-store", version.ref = "xodus" }
xodus-environment = { module = "org.jetbrains.xodus:xodus-environment", version.ref = "xodus" }
xodus-openApi = { module = "org.jetbrains.xodus:xodus-openAPI", version.ref = "xodus" }


[bundles]

[plugins]
